@model cvManagement.Models.Account
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    if (Model.Id > 0)
    {
        <h2>Edit Account</h2>
    }
    else
    {
        <h2>Insert Account</h2>
    }
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h4>Account</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.PassWord)
        <div class="form-group">
            <div class="row">
                <div class="col-md-2 col-lg-2 col-xl-2">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-8 col-lg-8 col-xl-8">
                    @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                </div>
                <div class="col"></div>
            </div>
        </div>
        @{
            if (Model.Id > 0)
            {
                <div class="form-group">
                    <div class="row">
                        <div class="col-md-2 col-lg-2 col-xl-2">
                            @Html.Label("PassWord", htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-8 col-lg-8 col-xl-8">
                            @Html.Password("oldpassword", null, new { @class = "form-control" })
                        </div>
                        <div class="col">
                            @Html.ActionLink("Change password", "updatePassword", new { id = Model.Id }, new { @class = "btn btn-outline-warning" })
                        </div>
                    </div>
                </div>
            }
            else if (Model.Id == 0)
            {
                <div class="form-group">
                    <div class="row">
                        <div class="col-md-2 col-lg-2 col-xl-2">
                            @Html.Label("PassWord", htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-8 col-lg-8 col-xl-8">
                            @Html.Password("password", null, new { @class = "form-control" })
                        </div>
                        <div class="col">
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="row">
                        <div class="col-md-2 col-lg-2 col-xl-2">
                            @Html.Label("PassWordAgain", htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-8 col-lg-8 col-xl-8">
                            @Html.Password("passwordAgain", null, new { @class = "form-control" })
                        </div>
                        <div class="col">
                        </div>
                    </div>
                </div>
            }
        }

    <div class="form-group">
        <div class="row">
            <div class="col-md-2 col-lg-2 col-xl-2">
                @Html.LabelFor(model => model.Role, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-8 col-lg-8 col-xl-8">
                @Html.DropDownListFor(model => model.Role, new List<SelectListItem> {
                    new SelectListItem{ Text = "Human Resource",Value="0"},
                    new SelectListItem{ Text = "Interviewer",Value="1"}
                }, new { @class = "form-control" })
            </div>
            <div class="col">
            </div>
        </div>
    </div>

        <div class="form-group">
            <div class="row">
                <div class="col d-flex justify-content-center" style="margin-top:5%;">
                    <input type="submit" value="Submit" class="btn btn-success" />
                    @Html.ActionLink("Back", "ShowAllAcounts", null, new { @class = "btn btn-secondary" })
                </div>
            </div>
        </div>
    </div>
}